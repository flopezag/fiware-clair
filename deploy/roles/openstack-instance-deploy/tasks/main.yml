---
# ---------------------------------------------------
# Deploy the OpenStack Server stuff and configure it
# Ansible Core v2.3
# ---------------------------------------------------
- name: Create a keypair for current user's use
  os_keypair:
    state: present
    name: fiware-clair-loginkey
    region_name: "{{ region }}"
    public_key_file: /Users/fernandolopez/.ssh/id_rsa.pub
    validate_certs: "{{validate_certs}}"
    auth:
      auth_url: "{{ auth_url }}"
      project_name: "{{ project_name }}"
      username: "{{ username }}"
      password: "{{ password }}"
      project_domain_name: "{{ project_domain_name }}"
      user_domain_name: "{{ user_domain_name }}"


- name: Create a security group
  os_security_group:
    state: present
    name: fiware-clair-secgrp
    region_name: "{{ region }}"
    validate_certs: "{{validate_certs}}"
    auth:
      auth_url: "{{ auth_url }}"
      project_name: "{{ project_name }}"
      username: "{{ username }}"
      password: "{{ password }}"
      project_domain_name: "{{ project_domain_name }}"
      user_domain_name: "{{ user_domain_name }}"

- name: security group to allow ICMP
  os_security_group_rule:
    state: present
    region_name: "{{ region }}"
    security_group: fiware-clair-secgrp
    protocol: icmp
    remote_ip_prefix: 0.0.0.0/0
    validate_certs: "{{validate_certs}}"
    auth:
      auth_url: "{{ auth_url }}"
      project_name: "{{ project_name }}"
      username: "{{ username }}"
      password: "{{ password }}"
      project_domain_name: "{{ project_domain_name }}"
      user_domain_name: "{{ user_domain_name }}"

- name: security group to allow SSH connections
  os_security_group_rule:
    state: present
    region_name: "{{ region }}"
    security_group: fiware-clair-secgrp
    protocol: tcp
    port_range_min: 22
    port_range_max: 22
    remote_ip_prefix: 0.0.0.0/0
    validate_certs: "{{validate_certs}}"
    auth:
      auth_url: "{{ auth_url }}"
      project_name: "{{ project_name }}"
      username: "{{ username }}"
      password: "{{ password }}"
      project_domain_name: "{{ project_domain_name }}"
      user_domain_name: "{{ user_domain_name }}"

- name: Deploy an instance
  os_server:
    state: present
    name: FIWAREClair
    region_name: "{{ region }}"
    image: base_ubuntu_18.04
    key_name: fiware-clair-loginkey
    wait: yes
    flavor: m1.medium
    network: node-int-net-01
    auto_ip: no
    meta:
      hostname: fiware-clair
    validate_certs: "{{validate_certs}}"
    auth:
      auth_url: "{{ auth_url }}"
      project_name: "{{ project_name }}"
      username: "{{ username }}"
      password: "{{ password }}"
      project_domain_name: "{{ project_domain_name }}"
      user_domain_name: "{{ user_domain_name }}"

- name: Assign a floating IP to the server
  os_floating_ip:
    state: present
    region_name: "{{ region }}"
    network: public-ext-net-01
    server: FIWAREClair
    wait: yes
    timeout: 180
    auth:
      auth_url: "{{ auth_url }}"
      project_name: "{{ project_name }}"
      username: "{{ username }}"
      password: "{{ password }}"
      project_domain_name: "{{ project_domain_name }}"
      user_domain_name: "{{ user_domain_name }}"
  register: data

- debug:
    msg: "{{ data.floating_ip.floating_ip_address }}"

- name: Wait for SSH on the Instance
  debugger: on_failed
  command: >
        ssh -oBatchMode=yes -oStrictHostKeyChecking=no ubuntu@{{ data.floating_ip.floating_ip_address }} true
  register: result
  until: result is success
  retries: 30
  delay: 10

- name: Add FIWARE Clair Instance to Inventory
  add_host: name=FIWAREClair groups=servers
            ansible_ssh_host={{ data.floating_ip.floating_ip_address }}
            ansible_user=ubuntu
            ansible_scp_if_ssh=y

- name: Display FIWARE Clair instanceâ€™s Floating IP
  debug:
    msg: "FIWARE Clair instance's Floating ip is {{ data.floating_ip.floating_ip_address }}"